{"ast":null,"code":"var _jsxFileName = \"/Users/stellawu/Desktop/3130release3_main/group02/group02release2/trello-frontend/src/Components/Login.js\",\n  _s = $RefreshSig$();\nimport * as Yup from \"yup\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Stack, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { authenticateUser } from \"../store/slices/user/UserThunk\";\nimport { toast } from \"react-toastify\";\nimport storage from \"../lib/localStorage\";\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(onLogin) {\n  _s();\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: null,\n      password: null\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async values => {\n      const {\n        email,\n        password\n      } = values;\n      //console.log(email, password);\n\n      /*    dispatch(\n            authenticateUser({\n              email,\n              password,\n            })\n          )\n            .then((response) => {\n              const { payload } = response;\n      \n              if (!payload || !payload[\"data\"]) {\n                toast.error(\"Something went wrong! Try again later\");\n                return;\n              }\n               const data = payload[\"data\"]\n              if (payload[\"status\"] !== \"SUCCESS\") {\n                toast.error(data[\"message\"]);\n                return;\n              }\n      \n              \n              storage.put(\"token\", data[\"token\"]);\n              navigate(\"/home\");\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n             */\n    }\n  });\n\n  async function handleSubmit(values, setSubmitting) {\n    const {\n      email,\n      password\n    } = values;\n    try {\n      const response = await fetch('http://localhost:9012/user/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        dispatch(authenticateUser({\n          email,\n          password\n        }));\n        navigate(\"/board\");\n      } else {\n        // if login failed\n        console.log('Login failed');\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  }\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    handlesubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 5,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        sx: {\n          textAlign: \"center\"\n        },\n        children: \"Trello Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          textAlign: \"center\"\n        },\n        children: \"Login Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handlesubmit,\n        onLogin: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"username\",\n            type: \"email\",\n            label: \"Email address\",\n            ...getFieldProps(\"email\"),\n            error: Boolean(touched.email && errors.email),\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"password\",\n            label: \"Password\",\n            ...getFieldProps(\"password\"),\n            error: Boolean(touched.password && errors.password),\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"N6j3cFy80B7znfUCIEWw7yF1hO8=\", false, function () {\n  return [useNavigate, useDispatch, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Yup","Form","FormikProvider","useFormik","LoadingButton","Stack","TextField","useNavigate","useDispatch","authenticateUser","toast","storage","Box","Typography","axios","jsxDEV","_jsxDEV","Login","onLogin","_s","LoginSchema","object","shape","email","string","required","password","navigate","dispatch","formik","initialValues","validationSchema","onSubmit","values","handleSubmit","setSubmitting","response","fetch","method","body","JSON","stringify","headers","ok","console","log","error","errors","touched","isSubmitting","handlesubmit","getFieldProps","spacing","children","variant","sx","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","value","autoComplete","noValidate","fullWidth","type","label","Boolean","helperText","size","loading","_c","$RefreshReg$"],"sources":["/Users/stellawu/Desktop/3130release3_main/group02/group02release2/trello-frontend/src/Components/Login.js"],"sourcesContent":["import * as Yup from \"yup\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Stack, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { authenticateUser } from \"../store/slices/user/UserThunk\";\nimport { toast } from \"react-toastify\";\nimport storage from \"../lib/localStorage\";\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\n\n\nexport default function Login(onLogin) {\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Email must be a valid email address\")\n      .required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n \n  const formik = useFormik({\n    initialValues: {\n      email: null,\n      password: null,\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async (values,) => {\n      const { email, password } = values;\n      //console.log(email, password);\n      \n  /*    dispatch(\n        authenticateUser({\n          email,\n          password,\n        })\n      )\n        .then((response) => {\n          const { payload } = response;\n  \n          if (!payload || !payload[\"data\"]) {\n            toast.error(\"Something went wrong! Try again later\");\n            return;\n          }\n\n          const data = payload[\"data\"]\n          if (payload[\"status\"] !== \"SUCCESS\") {\n            toast.error(data[\"message\"]);\n            return;\n          }\n  \n          \n          storage.put(\"token\", data[\"token\"]);\n          navigate(\"/home\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n         */\n    },\n     \n  });\n\n\n  async function handleSubmit(values, setSubmitting) {\n    const { email, password } = values;\n\n    try {\n      const response = await fetch('http://localhost:9012/user/login', {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        dispatch(authenticateUser({ email, password }));\n        \n\n        navigate(\"/board\")\n      } else {\n        // if login failed\n        console.log('Login failed');\n        \n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n    finally {\n       setSubmitting(false);\n    }\n  }\n\n\n\n  const { errors, touched, isSubmitting, handlesubmit, getFieldProps } = formik;\n\n  return (\n    <Stack spacing={5}>\n      <Box>\n            <Typography\n              variant=\"h3\"\n              sx={{\n                textAlign: \"center\",\n              }}\n            >\n              Trello Clone\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              sx={{\n                textAlign: \"center\",\n              }}\n            >\n              Login Here\n            </Typography>\n          </Box>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handlesubmit}\n        onLogin={handleSubmit}>   \n          <Stack spacing={3}>\n            <TextField\n              fullWidth\n              autoComplete=\"username\"\n              type=\"email\"\n              label=\"Email address\"\n              {...getFieldProps(\"email\")}\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n            />\n\n            <TextField\n              fullWidth\n              type=\"password\"\n              label=\"Password\"\n              {...getFieldProps(\"password\")}\n              error={Boolean(touched.password && errors.password)}\n              helperText={touched.password && errors.password}\n            />\n\n            <LoadingButton\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              loading={isSubmitting}\n            >\n              Login\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </Stack>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}