{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Typography } from \"@mui/material\";\nimport { FormikProvider, useFormik } from \"formik\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { MenuItem } from \"@mui/material\";\nimport { Container } from \"@mui/material\";\nconst Reset = () => {\n  _s();\n  const securityQuestions = [{\n    value: \"\",\n    label: \"Select Type\"\n  }, {\n    value: \"What is your favourite color?\",\n    label: \"What is your favourite color?\"\n  }, {\n    value: \"What is your nick name?\",\n    label: \"What is your nick name?\"\n  }];\n  const ResetSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    newPassword: Yup.string().required(\"New password is required\").min(8, \"New password must be at least 8 characters long\").matches(/^(?=.*[A-Z])/, \"Password must contain at least one uppercase letter\").matches(/^(?=.*[a-z])/, \"Password must contain at least one lowercase letter\").matches(/^(?=.*\\d)/, \"Password must contain at least one number\").matches(/^(?=.*[@$!%*?&])/, \"Password must contain at least one special character\"),\n    confirmPassword: Yup.string().required(\"Confirm password is required\").oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\"),\n    securityQuestion: Yup.string().required(\"Must select a security question\"),\n    securityAnswer: Yup.string().required(\"Answer is required\")\n  });\n  const [resetPasswordSuccess, setResetSuccess] = useState(false);\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      securityQuestion: \"\",\n      securityAnswer: \"\"\n    },\n    validationSchema: ResetSchema,\n    onSubmit: async values => {\n      const {\n        email,\n        newResetPassword,\n        securityQuestion,\n        securityAnswer\n      } = values;\n      try {\n        // Make the API request to reset the password\n\n        await axios.post(\"http://localhost:9008/api/user/reset-password\", {\n          email,\n          newResetPassword,\n          securityQuestion,\n          securityAnswer\n        });\n        navigate(\"/login\");\n        setResetSuccess(true);\n      } catch (error) {\n        console.log(\"An error occurred:\", error.message);\n      }\n    }\n  });\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return {};\n};\n_s(Reset, \"A5xkUiqn/A+faC94/HMzS2jyWmU=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useState","Form","Yup","TextField","Typography","FormikProvider","useFormik","axios","useNavigate","LoadingButton","MenuItem","Container","Reset","_s","securityQuestions","value","label","ResetSchema","object","shape","email","string","required","newPassword","min","matches","confirmPassword","oneOf","ref","securityQuestion","securityAnswer","resetPasswordSuccess","setResetSuccess","navigate","formik","initialValues","validationSchema","onSubmit","values","newResetPassword","post","error","console","log","message","errors","touched","isSubmitting","handleSubmit","getFieldProps","_c","$RefreshReg$"],"sources":["/Users/stellawu/Desktop/3130release3_main/group02/group02release2/trello-frontend/src/pages/Reset.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Typography } from \"@mui/material\";\nimport { FormikProvider, useFormik } from \"formik\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { MenuItem } from \"@mui/material\";\nimport { Container } from \"@mui/material\";\n\nconst Reset = () => {\n  const securityQuestions = [\n    { value: \"\", label: \"Select Type\" },\n\n    {\n      value: \"What is your favourite color?\",\n      label: \"What is your favourite color?\",\n    },\n\n    { value: \"What is your nick name?\", label: \"What is your nick name?\" },\n  ];\n\n  const ResetSchema = Yup.object().shape({\n    email: Yup.string()\n\n      .email(\"Email must be a valid email address\")\n\n      .required(\"Email is required\"),\n\n    newPassword: Yup.string()\n\n      .required(\"New password is required\")\n\n      .min(8, \"New password must be at least 8 characters long\")\n\n      .matches(\n        /^(?=.*[A-Z])/,\n        \"Password must contain at least one uppercase letter\"\n      )\n\n      .matches(\n        /^(?=.*[a-z])/,\n        \"Password must contain at least one lowercase letter\"\n      )\n\n      .matches(/^(?=.*\\d)/, \"Password must contain at least one number\")\n\n      .matches(\n        /^(?=.*[@$!%*?&])/,\n        \"Password must contain at least one special character\"\n      ),\n\n    confirmPassword: Yup.string()\n\n      .required(\"Confirm password is required\")\n\n      .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\"),\n\n    securityQuestion: Yup.string()\n    .required(\"Must select a security question\"),\n\n    securityAnswer:\n      Yup.string()\n      .required(\"Answer is required\"),\n  });\n\n  const [resetPasswordSuccess, setResetSuccess] = useState(false);\n\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n\n      newPassword: \"\",\n\n      confirmPassword: \"\",\n\n      securityQuestion: \"\",\n\n      securityAnswer: \"\",\n    },\n\n    validationSchema: ResetSchema,\n\n    onSubmit: async (values) => {\n      const { email, newResetPassword, securityQuestion, securityAnswer } =\n        values;\n\n      try {\n        // Make the API request to reset the password\n\n        await axios.post(\"http://localhost:9008/api/user/reset-password\", {\n          email,\n\n          newResetPassword,\n\n          securityQuestion,\n\n          securityAnswer,\n        });\n\n        navigate(\"/login\");\n\n        setResetSuccess(true);\n      } catch (error) {\n        console.log(\"An error occurred:\", error.message);\n      }\n    },\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return {\n\n  }\n  \n};\n\nexport default Reset;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}