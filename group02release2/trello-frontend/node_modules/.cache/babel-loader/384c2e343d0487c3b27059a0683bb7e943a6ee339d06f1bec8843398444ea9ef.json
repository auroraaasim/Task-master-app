{"ast":null,"code":"var _jsxFileName = \"/Users/stellawu/Desktop/3130release2/group02/trello-frontend/src/Components/Login.js\",\n  _s = $RefreshSig$();\nimport * as Yup from \"yup\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Stack, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { authenticateUser } from \"../store/slices/user/UserThunk\";\nimport { toast } from \"react-toastify\";\nimport storage from \"../lib/localStorage\";\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: null,\n      password: null\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async values => {\n      const {\n        email,\n        password\n      } = values;\n      //console.log(email, password);\n\n      dispatch(authenticateUser({\n        email,\n        password\n      })).then(response => {\n        const {\n          payload\n        } = response;\n        if (!payload || !payload[\"data\"]) {\n          toast.error(\"Something went wrong! Try again later\");\n          return;\n        }\n        const data = payload[\"data\"];\n        if (payload[\"status\"] !== \"SUCCESS\") {\n          toast.error(data[\"message\"]);\n          return;\n        }\n        storage.put(\"token\", data[\"token\"]);\n        navigate(\"/home\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 5,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        sx: {\n          textAlign: \"center\"\n        },\n        children: \"Trello Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          textAlign: \"center\"\n        },\n        children: \"Login Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"username\",\n            type: \"email\",\n            label: \"Email address\",\n            ...getFieldProps(\"email\"),\n            error: Boolean(touched.email && errors.email),\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"password\",\n            label: \"Password\",\n            ...getFieldProps(\"password\"),\n            error: Boolean(touched.password && errors.password),\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"N6j3cFy80B7znfUCIEWw7yF1hO8=\", false, function () {\n  return [useNavigate, useDispatch, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Yup","Form","FormikProvider","useFormik","LoadingButton","Stack","TextField","useNavigate","useDispatch","authenticateUser","toast","storage","Box","Typography","axios","jsxDEV","_jsxDEV","Login","_s","LoginSchema","object","shape","email","string","required","password","navigate","dispatch","formik","initialValues","validationSchema","onSubmit","values","then","response","payload","error","data","put","catch","console","log","errors","touched","isSubmitting","handleSubmit","getFieldProps","spacing","children","variant","sx","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","value","autoComplete","noValidate","fullWidth","type","label","Boolean","helperText","size","loading","_c","$RefreshReg$"],"sources":["/Users/stellawu/Desktop/3130release2/group02/trello-frontend/src/Components/Login.js"],"sourcesContent":["import * as Yup from \"yup\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Stack, TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { authenticateUser } from \"../store/slices/user/UserThunk\";\nimport { toast } from \"react-toastify\";\nimport storage from \"../lib/localStorage\";\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\n\n\nexport default function Login() {\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Email must be a valid email address\")\n      .required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n \n  const formik = useFormik({\n    initialValues: {\n      email: null,\n      password: null,\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async (values) => {\n      const { email, password } = values;\n      //console.log(email, password);\n      \n      dispatch(\n        authenticateUser({\n          email,\n          password,\n        })\n      )\n        .then((response) => {\n          const { payload } = response;\n  \n          if (!payload || !payload[\"data\"]) {\n            toast.error(\"Something went wrong! Try again later\");\n            return;\n          }\n\n          const data = payload[\"data\"]\n          if (payload[\"status\"] !== \"SUCCESS\") {\n            toast.error(data[\"message\"]);\n            return;\n          }\n  \n          \n          storage.put(\"token\", data[\"token\"]);\n          navigate(\"/home\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <Stack spacing={5}>\n      <Box>\n            <Typography\n              variant=\"h3\"\n              sx={{\n                textAlign: \"center\",\n              }}\n            >\n              Trello Clone\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              sx={{\n                textAlign: \"center\",\n              }}\n            >\n              Login Here\n            </Typography>\n          </Box>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3}>\n            <TextField\n              fullWidth\n              autoComplete=\"username\"\n              type=\"email\"\n              label=\"Email address\"\n              {...getFieldProps(\"email\")}\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n            />\n\n            <TextField\n              fullWidth\n              type=\"password\"\n              label=\"Password\"\n              {...getFieldProps(\"password\")}\n              error={Boolean(touched.password && errors.password)}\n              helperText={touched.password && errors.password}\n            />\n\n            <LoadingButton\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              loading={isSubmitting}\n            >\n              Login\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </Stack>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}