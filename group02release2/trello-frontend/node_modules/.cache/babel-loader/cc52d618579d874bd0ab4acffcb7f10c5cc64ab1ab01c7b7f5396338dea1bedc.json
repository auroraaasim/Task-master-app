{"ast":null,"code":"/*\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { authenticateUser, fetchAuthenticatedUser } from \"./UserThunk\";\n\n\nconst initialState = {\n  details: {\n    data: {},\n    isFetching: false,\n  },\n  authenticate: {\n    data: null,\n    isFetching: false,\n  },\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.details.data = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(authenticateUser.fulfilled, (state, action) => {\n      if (\n        !action.payload ||\n        !action.payload[\"data\"] ||\n        !action.payload[\"data\"][\"token\"]\n      ) {\n        return;\n      }\n\n      state.authenticate.data = action.payload[\"data\"][\"token\"];\n      state.authenticate.isFetching = false;\n    });\n\n    builder.addCase(authenticateUser.pending, (state) => {\n      state.authenticate.isFetching = true;\n    });\n  },\n});\n\n\nexport const { setUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n*/","map":{"version":3,"names":[],"sources":["/Users/stellawu/Desktop/3130release3_main/group02/group02release2/trello-frontend/src/store/slices/user/UserSlice.js"],"sourcesContent":["/*\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { authenticateUser, fetchAuthenticatedUser } from \"./UserThunk\";\n\n\nconst initialState = {\n  details: {\n    data: {},\n    isFetching: false,\n  },\n  authenticate: {\n    data: null,\n    isFetching: false,\n  },\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.details.data = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(authenticateUser.fulfilled, (state, action) => {\n      if (\n        !action.payload ||\n        !action.payload[\"data\"] ||\n        !action.payload[\"data\"][\"token\"]\n      ) {\n        return;\n      }\n\n      state.authenticate.data = action.payload[\"data\"][\"token\"];\n      state.authenticate.isFetching = false;\n    });\n\n    builder.addCase(authenticateUser.pending, (state) => {\n      state.authenticate.isFetching = true;\n    });\n  },\n});\n\n\nexport const { setUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n*/\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}