{"ast":null,"code":"var _jsxFileName = \"/Users/stellawu/Desktop/3130release2/group02/trello-frontend/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Box, Container, IconButton, InputAdornment, Stack, TextField, Typography } from \"@mui/material\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Link } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport storage from \"../lib/localStorage\";\nimport { authenticateUser } from \"../store/slices/user/UserThunk\";\nimport { setAuthenticate, setUser } from \"../store/slices/user/UserSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"First name required\"),\n    lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Last name required\"),\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    password: Yup.string().required('Password is required').min(8, \"Too Short!\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()])/, 'Password must contain at least one lowercase letter, one uppercase letter, one number, and one symbol'),\n    passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n    securityAnswer: Yup.string().required(\"securityAnswer is required\")\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [fName, setFName] = useState('');\n  const [lName, setLName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [security_qs, setSecurity_qs] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send registration data to backend\n\n      const response = await axios.post('http://localhost:9008/user/register', {\n        fName,\n        lName,\n        email,\n        password,\n        security_qs\n      });\n\n      // Registration successful\n\n      console.log(response.data);\n      navigate(\"/login\");\n    } catch (error) {\n      // Handle registration error\n\n      console.error(error);\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      securityAnswer: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: async values => {\n      const {\n        email,\n        password,\n        firstName,\n        lastName,\n        securityAnswer\n      } = values;\n\n      //console.log(values);\n\n      dispatch(authenticateUser({\n        email,\n        password\n      })).then(response => {\n        const {\n          payload\n        } = response;\n        console.log(payload);\n        if (!payload) {\n          toast.error(\"Something went wrong! Try again later\");\n          return;\n        }\n        if (payload[\"status\"] !== \"SUCCESS\") {\n          toast.error(payload[\"message\"]);\n          return;\n        }\n        const data = payload[\"data\"];\n        storage.put(\"token\", data);\n        dispatch(setUser(data));\n        navigate(\"/login\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    handlSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            sx: {\n              textAlign: \"center\"\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n          value: formik,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            autoComplete: \"off\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"First name\",\n                value: fName,\n                onChange: e => setFName(e.target.value)\n\n                // {...getFieldProps(\"firstName\")}\n                ,\n\n                error: Boolean(touched.firstName && errors.firstName),\n                helperText: touched.firstName && errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Last name\",\n                value: lName,\n                onChange: e => setLName(e.target.value)\n\n                // {...getFieldProps(\"lastName\")}\n                ,\n\n                error: Boolean(touched.lastName && errors.lastName),\n                helperText: touched.lastName && errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n\n                // {...getFieldProps(\"email\")}\n                ,\n\n                error: Boolean(touched.email && errors.email),\n                helperText: touched.email && errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                type: \"password\",\n                label: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n\n                //{...getFieldProps(\"password\")}\n                ,\n\n                error: Boolean(touched.password && errors.password),\n                helperText: touched.password && errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                type: showPassword ? \"text\" : \"password\",\n                label: \"Confirm Password\"\n\n                // {...getFieldProps(\"passwordConfirmation\")}\n                ,\n\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      edge: \"end\",\n                      onClick: () => setShowPassword(prev => !prev),\n                      children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 867,\n                        columnNumber: 43\n                      }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 877,\n                        columnNumber: 43\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 847,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 31\n                  }, this)\n                },\n                error: Boolean(touched.passwordConfirmation && errors.passwordConfirmation),\n                helperText: touched.passwordConfirmation && errors.passwordConfirmation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Security Question: What is the name of your first pet? \",\n                value: security_qs,\n                onChange: e => setSecurity_qs(e.target.value)\n\n                // {...getFieldProps(\"securityAnswer\")}\n                ,\n\n                error: Boolean(touched.securityAnswer && errors.securityAnswer),\n                helperText: touched.securityAnswer && errors.securityAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n                loading: isSubmitting,\n                fullWidth: true,\n                variants: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            component: Link,\n            to: \"/update-password\",\n            className: \"link\",\n            style: {\n              color: \"#fff\"\n            },\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?  \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 532,\n    columnNumber: 7\n  }, this);\n};\n_s(Register, \"QoUmlAsx7fOOLvZq2rWKWkSY+Ws=\", false, function () {\n  return [useDispatch, useNavigate, useFormik];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","Box","Container","IconButton","InputAdornment","Stack","TextField","Typography","Form","FormikProvider","useFormik","Yup","VisibilityIcon","VisibilityOffIcon","useDispatch","useNavigate","LoadingButton","Link","toast","storage","authenticateUser","setAuthenticate","setUser","jsxDEV","_jsxDEV","Register","_s","showPassword","setShowPassword","RegisterSchema","object","shape","firstName","string","min","max","required","lastName","email","password","matches","passwordConfirmation","oneOf","ref","securityAnswer","dispatch","navigate","fName","setFName","lName","setLName","setEmail","setPassword","security_qs","setSecurity_qs","handleSubmit","e","preventDefault","response","post","console","log","data","error","formik","initialValues","validationSchema","onSubmit","values","then","payload","put","catch","errors","touched","isSubmitting","handlSubmit","getFieldProps","maxWidth","sx","height","children","mt","spacing","variant","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","value","autoComplete","noValidate","fullWidth","label","onChange","target","Boolean","helperText","type","InputProps","endAdornment","position","edge","onClick","prev","loading","variants","component","to","className","style","color","_c","$RefreshReg$"],"sources":["/Users/stellawu/Desktop/3130release2/group02/trello-frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport {Box, Container, IconButton, InputAdornment, Stack, TextField, Typography} from \"@mui/material\";\nimport {Form, FormikProvider, useFormik} from \"formik\";\nimport * as Yup from \"yup\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {LoadingButton} from \"@mui/lab\";\nimport { Link } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport storage from \"../lib/localStorage\";\nimport { authenticateUser } from \"../store/slices/user/UserThunk\";\nimport { setAuthenticate, setUser } from \"../store/slices/user/UserSlice\";\n\n\nconst Register = () => {\n\n\n\n\n    const [showPassword, setShowPassword] = useState(false);\n  \n  \n  \n  \n  \n  \n  \n    const RegisterSchema = Yup.object().shape({\n  \n  \n  \n  \n        firstName: Yup.string()\n  \n  \n  \n  \n            .min(2, \"Too Short!\")\n  \n  \n  \n  \n            .max(50, \"Too Long!\")\n  \n  \n  \n  \n            .required(\"First name required\"),\n  \n  \n  \n  \n        lastName: Yup.string()\n  \n  \n  \n  \n            .min(2, \"Too Short!\")\n  \n  \n  \n  \n            .max(50, \"Too Long!\")\n  \n  \n  \n  \n            .required(\"Last name required\"),\n  \n  \n  \n  \n        email: Yup.string()\n  \n  \n  \n  \n            .email(\"Email must be a valid email address\")\n  \n  \n  \n  \n            .required(\"Email is required\"),\n  \n  \n  \n  \n        password: Yup.string()\n  \n  \n  \n  \n            .required('Password is required')\n  \n  \n  \n  \n            .min(8, \"Too Short!\")\n  \n  \n  \n  \n            .matches(\n  \n  \n  \n  \n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()])/,\n  \n  \n  \n  \n                'Password must contain at least one lowercase letter, one uppercase letter, one number, and one symbol'\n  \n  \n  \n  \n            ),\n  \n  \n  \n  \n        passwordConfirmation: Yup.string().oneOf(\n  \n  \n  \n  \n            [Yup.ref(\"password\"), null],\n  \n  \n  \n  \n            \"Passwords must match\"),\n  \n  \n  \n  \n        securityAnswer: Yup.string()\n  \n  \n  \n  \n            .required(\"securityAnswer is required\"),\n  \n  \n  \n  \n    });\n  \n  \n  \n  \n  \n  \n  \n    const dispatch = useDispatch();\n  \n  \n  \n  \n    const navigate = useNavigate();\n  \n  \n  \n  \n  \n  \n  \n  \n    const [fName, setFName] = useState('');\n  \n  \n  \n  \n    const [lName, setLName] = useState('');\n  \n  \n  \n  \n    const [email, setEmail] = useState('');\n  \n  \n  \n  \n    const [password, setPassword] = useState('');\n  \n  \n  \n  \n    const [security_qs, setSecurity_qs] = useState('');\n  \n  \n  \n  \n  \n  \n  \n    const handleSubmit = async (e) => {\n  \n  \n  \n  \n      e.preventDefault();\n  \n  \n  \n  \n  \n  \n  \n      try {\n  \n  \n  \n  \n        // Send registration data to backend\n  \n  \n  \n  \n        const response = await axios.post('http://localhost:9008/user/register', {\n  \n  \n  \n  \n          fName,\n  \n  \n  \n  \n          lName,\n  \n  \n  \n  \n          email,\n  \n  \n  \n  \n          password,\n  \n  \n  \n  \n          security_qs\n  \n  \n  \n  \n        });\n  \n  \n  \n  \n  \n  \n  \n        // Registration successful\n  \n  \n  \n  \n        console.log(response.data);\n  \n  \n  \n  \n        navigate(\"/login\");\n  \n  \n  \n  \n      } catch (error) {\n  \n  \n  \n  \n        // Handle registration error\n  \n  \n  \n  \n        console.error(error);\n  \n  \n  \n  \n      }\n  \n  \n  \n  \n    };\n  \n  \n  \n  \n  \n  \n  \n    const formik = useFormik({\n  \n  \n  \n  \n      initialValues: {\n  \n  \n  \n  \n          firstName: '',\n  \n  \n  \n  \n          lastName: '',\n  \n  \n  \n  \n          email: '',\n  \n  \n  \n  \n          password: '',\n  \n  \n  \n  \n          passwordConfirmation: '',\n  \n  \n  \n  \n          securityAnswer: '',\n  \n  \n  \n  \n      },\n  \n  \n  \n  \n      validationSchema: RegisterSchema,\n  \n  \n  \n  \n      onSubmit: async (values) => {\n  \n  \n  \n  \n          const { email, password, firstName, lastName, securityAnswer } = values;\n  \n  \n  \n  \n          //console.log(values);\n  \n  \n  \n  \n  \n  \n  \n              dispatch(authenticateUser({\n  \n  \n  \n  \n                  email,\n  \n  \n  \n  \n                  password,\n  \n  \n  \n  \n              })).then((response) => {\n  \n  \n  \n  \n                  const { payload } = response;\n  \n  \n  \n  \n  \n  \n  \n                  console.log(payload);\n  \n  \n  \n  \n  \n  \n  \n                  if (!payload) {\n  \n  \n  \n  \n                      toast.error(\"Something went wrong! Try again later\");\n  \n  \n  \n  \n                      return;\n  \n  \n  \n  \n                  }\n  \n  \n  \n  \n  \n  \n  \n                  if (payload[\"status\"] !== \"SUCCESS\") {\n  \n  \n  \n  \n                      toast.error(payload[\"message\"]);\n  \n  \n  \n  \n                      return;\n  \n  \n  \n  \n                  }\n  \n  \n  \n  \n  \n  \n  \n                  const data = payload[\"data\"]\n  \n  \n  \n  \n                  \n  \n  \n  \n  \n                  storage.put(\"token\", data)\n  \n  \n  \n  \n  \n  \n  \n                  dispatch(setUser(data))\n  \n  \n  \n  \n  \n  \n  \n                   navigate(\"/login\")\n  \n  \n  \n  \n              }).catch((error) => {\n  \n  \n  \n  \n                  console.log(error);\n  \n  \n  \n  \n              });\n  \n  \n  \n  \n        \n  \n  \n  \n  \n      },\n  \n  \n  \n  \n  });\n  \n  \n  \n  \n  \n  \n  \n  const { errors, touched, isSubmitting, handlSubmit, getFieldProps } = formik;\n  \n  \n  \n  \n  \n  \n  \n    return (\n  \n  \n  \n  \n      <Container maxWidth=\"sm\" sx={{ height: \"100%\" }}>\n  \n  \n  \n  \n      <Box sx={{ mt: 20 }}>\n  \n  \n  \n  \n          <Stack spacing={5}>\n  \n  \n  \n  \n              <Box>\n  \n  \n  \n  \n                  <Typography\n  \n  \n  \n  \n                      variant=\"h3\"\n  \n  \n  \n  \n                      sx={{\n  \n  \n  \n  \n                          textAlign: \"center\",\n  \n  \n  \n  \n                      }}\n  \n  \n  \n  \n                  >\n  \n  \n  \n  \n                      Register\n  \n  \n  \n  \n                  </Typography>\n  \n  \n  \n  \n              </Box>\n  \n  \n  \n  \n              <FormikProvider value={formik}>\n  \n  \n  \n  \n                  <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n  \n  \n  \n  \n                      <Stack spacing={3}>\n  \n  \n  \n  \n  \n  \n  \n                      <TextField\n  \n  \n  \n  \n                      fullWidth\n  \n  \n  \n  \n                      label=\"First name\"\n  \n  \n  \n  \n                      value = {fName}\n  \n  \n  \n  \n                      onChange={(e)=>setFName(e.target.value)}\n  \n  \n  \n  \n                     // {...getFieldProps(\"firstName\")}\n  \n  \n  \n  \n                      error={Boolean(touched.firstName && errors.firstName)}\n  \n  \n  \n  \n                      helperText={touched.firstName && errors.firstName}\n  \n  \n  \n  \n                  />\n  \n  \n  \n  \n                  <TextField\n  \n  \n  \n  \n                      fullWidth\n  \n  \n  \n  \n                      label=\"Last name\"\n  \n  \n  \n  \n                      value = {lName}\n  \n  \n  \n  \n                      onChange={(e)=>setLName(e.target.value)}\n  \n  \n  \n  \n                     // {...getFieldProps(\"lastName\")}\n  \n  \n  \n  \n                      error={Boolean(touched.lastName && errors.lastName)}\n  \n  \n  \n  \n                      helperText={touched.lastName && errors.lastName}\n  \n  \n  \n  \n                  />\n  \n  \n  \n  \n                  <TextField\n  \n  \n  \n  \n                      fullWidth\n  \n  \n  \n  \n                      label=\"Email\"\n  \n  \n  \n  \n                      value = {email}\n  \n  \n  \n  \n                      onChange={(e)=>setEmail(e.target.value)}\n  \n  \n  \n  \n                     // {...getFieldProps(\"email\")}\n  \n  \n  \n  \n                      error={Boolean(touched.email && errors.email)}\n  \n  \n  \n  \n                      helperText={touched.email && errors.email}\n  \n  \n  \n  \n                  />\n  \n  \n  \n  \n  \n  \n  \n                  <TextField\n  \n  \n  \n  \n                      fullWidth\n  \n  \n  \n  \n                      type=\"password\"\n  \n  \n  \n  \n                      label=\"Password\"\n  \n  \n  \n  \n                      value = {password}\n  \n  \n  \n  \n                      onChange={(e)=>setPassword(e.target.value)}\n  \n  \n  \n  \n                      //{...getFieldProps(\"password\")}\n  \n  \n  \n  \n                      error={Boolean(touched.password && errors.password)}\n  \n  \n  \n  \n                      helperText={touched.password && errors.password}\n  \n  \n  \n  \n                  />\n  \n  \n  \n  \n  \n  \n  \n  \n                  <TextField\n  \n  \n  \n  \n                      fullWidth\n  \n  \n  \n  \n                      type={showPassword ? \"text\" : \"password\"}\n  \n  \n  \n  \n                      label=\"Confirm Password\"\n  \n  \n  \n  \n                     // {...getFieldProps(\"passwordConfirmation\")}\n  \n  \n  \n  \n                      InputProps={{\n  \n  \n  \n  \n                          endAdornment: (\n  \n  \n  \n  \n                              <InputAdornment position=\"end\">\n  \n  \n  \n  \n                                  <IconButton\n  \n  \n  \n  \n                                      edge=\"end\"\n  \n  \n  \n  \n                                      onClick={() => setShowPassword((prev) => !prev)}>\n  \n  \n  \n  \n                                      {showPassword ? (\n  \n  \n  \n  \n                                          <VisibilityIcon />\n  \n  \n  \n  \n                                      ) : (\n  \n  \n  \n  \n                                          <VisibilityOffIcon />\n  \n  \n  \n  \n                                      )}\n  \n  \n  \n  \n                                  </IconButton>\n  \n  \n  \n  \n                              </InputAdornment>\n  \n  \n  \n  \n                          ),\n  \n  \n  \n  \n                      }}\n  \n  \n  \n  \n                      error={Boolean(\n  \n  \n  \n  \n                          touched.passwordConfirmation && errors.passwordConfirmation\n  \n  \n  \n  \n                      )}\n  \n  \n  \n  \n                      helperText={\n  \n  \n  \n  \n                          touched.passwordConfirmation && errors.passwordConfirmation\n  \n  \n  \n  \n                      }\n  \n  \n  \n  \n                  />\n  \n  \n  \n  \n                      <TextField\n  \n  \n  \n  \n                      fullWidth\n  \n  \n  \n  \n                      label=\"Security Question: What is the name of your first pet? \"\n  \n  \n  \n  \n                      value = {security_qs}\n  \n  \n  \n  \n                      onChange={(e)=>setSecurity_qs(e.target.value)}\n  \n  \n  \n  \n                     // {...getFieldProps(\"securityAnswer\")}\n  \n  \n  \n  \n                      error={Boolean(touched.securityAnswer && errors.securityAnswer)}\n  \n  \n  \n  \n                      helperText={touched.securityAnswer && errors.securityAnswer}\n  \n  \n  \n  \n                      />\n  \n  \n  \n  \n  \n  \n  \n                  <LoadingButton loading={isSubmitting} fullWidth variants=\"contained\" type=\"submit\">\n  \n  \n  \n  \n                      Submit\n  \n  \n  \n  \n                  </LoadingButton>\n  \n  \n  \n  \n              </Stack>\n  \n  \n  \n  \n          </Form>\n  \n  \n  \n  \n      </FormikProvider>\n  \n  \n  \n  \n      <Typography>\n  \n  \n  \n  \n                      <Link component={Link} to=\"/update-password\" className=\"link\" style={{ color: \"#fff\" }}>\n  \n  \n  \n  \n                          Reset Password\n  \n  \n  \n  \n                      </Link>\n  \n  \n  \n  \n       </Typography>\n  \n  \n  \n  \n  </Stack>\n  \n  \n  \n  \n  <p>Already registered?  <Link to=\"/login\">Log in</Link></p>\n  \n  \n  \n  \n  </Box>\n  \n  \n  \n  \n  </Container>\n  \n  \n  \n  \n    );\n  \n  \n  \n  \n  };\n  \n  \n  \n  \n  \n  \n  \n  export default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}